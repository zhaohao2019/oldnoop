#####################druid(阿里巴巴德鲁伊 v1.0.31,2017.5)数据源配置属性#####################
#####################mysql#####################
ds.url=jdbc:mysql://localhost:3306/account?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
ds.driverClassName=com.mysql.jdbc.Driver
ds.username=root
ds.password=root
ds.initialSize=1
ds.maxActive=20
ds.maxWait=60000
ds.minIdle=10
ds.timeBetweenEvictionRunsMillis=60000
ds.minEvictableIdleTimeMillis=300000
ds.validationQuery=SELECT 1 from dual
ds.testWhileIdle=true
ds.testOnBorrow=false
ds.testOnReturn=false
ds.filters=stat
ds.poolPreparedStatements=false
ds.maxPoolPreparedStatementPerConnectionSize=20
#####################oracle#####################
#ds.driverClassName=oracle.jdbc.driver.OracleDriver
#ds.url=jdbc:oracle:thin:@localhost:1521:orcl
#ds.username=orcl
#ds.password=orcl
#ds.initialSize=1
#ds.maxActive=20
#ds.maxWait=60000
#ds.minIdle=10
#ds.timeBetweenEvictionRunsMillis=60000
#ds.minEvictableIdleTimeMillis=300000
#ds.validationQuery=SELECT 1 from dual
#ds.testWhileIdle=true
#ds.testOnBorrow=false
#ds.testOnReturn=false
#ds.filters=stat
#ds.poolPreparedStatements=true
#ds.maxPoolPreparedStatementPerConnectionSize=20

#spring配置
#<!-- 阿里 druid数据库连接池 -->
#<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
#	init-method="init" destroy-method="close">  
#     <!-- 数据库基本信息配置 -->
#     <property name="url" value="${ds.url}" />  
#     <!-- 可配可不配,不配置按照url自动识别 -->
#     <property name="driverClassName" value="${ds.driverClassName}" />  
#     <property name="username" value="${ds.username}" />  
#     <property name="password" value="${ds.password}" />  
#     <!-- 配置初始化大小、最小、最大 -->
#     <!-- 初始化连接数量 -->
#     <property name="initialSize" value="${ds.initialSize}" />
#     <!-- 最小空闲连接数 -->
#     <property name="minIdle" value="${ds.minIdle}" />  
#	 <!-- 最大并发连接数 -->
#     <property name="maxActive" value="${ds.maxActive}" />
#     
#     <!-- 配置获取连接等待超时的时间 -->
#     <property name="maxWait" value="${ds.maxWait}" />
#     
#	 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
#     <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}" />
#     <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
#     <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}" />  
#     <property name="validationQuery" value="${ds.validationQuery}" />  
#     <property name="testWhileIdle" value="${ds.testWhileIdle}" />  
#     <property name="testOnBorrow" value="${ds.testOnBorrow}" />  
#     <property name="testOnReturn" value="${ds.testOnReturn}" />
#     <!-- 配置拦截器,可以有stat统计,wall防火墙,log4j日志 -->  
#     <property name="filters" value="${ds.filters}" />  
#     <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
#     <!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false -->
#     <property name="poolPreparedStatements" value="${ds.poolPreparedStatements}" />
#     <property name="maxPoolPreparedStatementPerConnectionSize" value="${ds.maxPoolPreparedStatementPerConnectionSize}" />
#</bean>  




#####################dbcp(1.4,2010.2.7)数据源配置属性#####################
#####################mysql#####################
#ds.url=jdbc:mysql://localhost:3306/ssm?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
#ds.driverClassName=com.mysql.jdbc.Driver
#ds.username=root
#ds.password=root
#ds.initialSize=10
#ds.maxActive=50
#ds.minIdle=5
#ds.maxIdle=10
#ds.maxWait=10
#ds.logAbandoned=true
#ds.removeAbandoned=true
#ds.removeAbandonedTimeout=1800
#ds.timeBetweenEvictionRunsMillis=60000
#ds.minEvictableIdleTimeMillis=300000
#ds.numTestsPerEvictionRun=10
#ds.validationQuery=SELECT 1 from dual
#ds.testWhileIdle=true
#####################oracle#####################
#ds.driverClassName=oracle.jdbc.driver.OracleDriver
#ds.url=jdbc:oracle:thin:@localhost:1521:orcl
#ds.username=orcl
#ds.password=orcl
#ds.initialSize=10
#ds.maxActive=50
#ds.minIdle=5
#ds.maxIdle=10
#ds.maxWait=10
#ds.logAbandoned=true
#ds.removeAbandoned=true
#ds.removeAbandonedTimeout=1800
#ds.timeBetweenEvictionRunsMillis=60000
#ds.minEvictableIdleTimeMillis=300000
#ds.numTestsPerEvictionRun=10
#ds.validationQuery=SELECT 1 from dual
#ds.testWhileIdle=true

#spring配置
#<!-- dbcp数据库连接池 -->
#<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
#   <property name="driverClassName" value="${ds.driverClassName}"/>  
#   <property name="url" value="${ds.url}"/>  
#   <property name="username" value="${ds.username}"/>  
#   <property name="password" value="${ds.password}"/>  
#   <!--maxActive: 最大连接数量-->  
#   <property name="maxActive" value="${ds.maxActive}"/>  
#   <!--minIdle: 最小空闲连接-->  
#   <property name="minIdle" value="${ds.minIdle}"/>  
#   <!--maxIdle: 最大空闲连接-->  
#   <property name="maxIdle" value="${ds.maxIdle}"/>  
#   <!--initialSize: 初始化连接-->  
#   <property name="initialSize" value="${ds.initialSize}"/>  
#   <!--   maxWait: 超时等待时间以毫秒为单位 1000等于60秒 -->  
#   <property name="maxWait" value="${ds.maxWait}"/>  
#   <!--  连接被泄露时是否打印 -->  
#   <property name="logAbandoned" value="${ds.logAbandoned}"/>  
#   <!--   removeAbandoned: 是否自动回收超时连接 -->  
#   <property name="removeAbandoned" value="${ds.removeAbandoned}"/>  
#   <!--  removeAbandonedTimeout: 超时时间(以秒数为单位) -->  
#   <property name="removeAbandonedTimeout" value="${ds.removeAbandonedTimeout}"/> 
#   <!--   在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
#   <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}"/>  
#  	<!--   在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
#   <property name="numTestsPerEvictionRun" value="${ds.numTestsPerEvictionRun}"/>  
#	<!--    1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程 -->  
#   <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}"/>  
#   <property name="validationQuery" value="${ds.validationQuery}"/>  
#	<!-- 定时对线程池中的链接进行validateObject校验，对无效的链接进行关闭 -->  
# 	<property name="testWhileIdle" value="${ds.testWhileIdle}"/>  
#</bean> 
#initialSize ：连接池启动时创建的初始化连接数量（默认值为0）
#maxActive ：连接池中可同时连接的最大的连接数（默认值为8，调整为20，高峰单机器在20并发左右，自己根据应用场景定）
#maxIdle：连接池中最大的空闲的连接数，超过的空闲连接将被释放，如果设置为负数表示不限制（默认为8个，maxIdle不能设置太小，因为假如在高负载的情况下，连接的打开时间比关闭的时间快，会引起连接池中idle的个数 上升超过maxIdle，而造成频繁的连接销毁和创建，类似于jvm参数中的Xmx设置)
#minIdle：连接池中最小的空闲的连接数，低于这个数量会被创建新的连接（默认为0，调整为5，该参数越接近maxIdle，性能越好，因为连接的创建和销毁，都是需要消耗资源的；但是不能太大，因为在机器很空闲的时候，也会创建低于minidle个数的连接，类似于jvm参数中的Xmn设置）
#maxWait  ：最大等待时间，当没有可用连接时，连接池等待连接释放的最大时间，超过该时间限制会抛出异常，如果设置-1表示无限等待（默认为无限，调整为60000ms，避免因线程池不够用，而导致请求被无限制挂起）
#poolPreparedStatements：开启池的prepared（默认是false，未调整，经过测试，开启后的性能没有关闭的好。）
#maxOpenPreparedStatements：开启池的prepared 后的同时最大连接数（默认无限制，同上，未配置）
#minEvictableIdleTimeMillis  ：连接池中连接，在时间段内一直空闲， 被逐出连接池的时间
#（默认为30分钟，可以适当做调整，需要和后端服务端的策略配置相关）
#removeAbandonedTimeout  ：超过时间限制，回收没有用(废弃)的连接（默认为 300秒，调整为180）
#removeAbandoned  ：超过removeAbandonedTimeout时间后，是否进 行没用连接（废弃）的回收（默认为false，调整为true)




#####################dbcp2(2.1.1,2015.8.2)数据源配置属性#####################
#####################mysql#####################
#ds.url=jdbc:mysql://localhost:3306/ssm?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
#ds.driverClassName=com.mysql.jdbc.Driver
#ds.username=root
#ds.password=root
#ds.initialSize=10
#ds.maxTotal=50
#ds.minIdle=5
#ds.maxIdle=10
#ds.maxWaitMillis=10
#ds.logAbandoned=true
#ds.removeAbandonedOnBorrow=true
#ds.removeAbandonedOnMaintenance=true
#ds.removeAbandonedTimeout=1800
#ds.timeBetweenEvictionRunsMillis=60000
#ds.minEvictableIdleTimeMillis=300000
#ds.numTestsPerEvictionRun=10
#ds.validationQuery=SELECT 1 from dual
#ds.testWhileIdle=true
#####################oracle#####################
#ds.driverClassName=oracle.jdbc.driver.OracleDriver
#ds.url=jdbc:oracle:thin:@localhost:1521:orcl
#ds.username=orcl
#ds.password=orcl
#ds.initialSize=10
#ds.maxTotal=50
#ds.minIdle=5
#ds.maxIdle=10
#ds.maxWaitMillis=10
#ds.logAbandoned=true
#ds.removeAbandonedOnBorrow=true
#ds.removeAbandonedOnMaintenance=true
#ds.removeAbandonedTimeout=1800
#ds.timeBetweenEvictionRunsMillis=60000
#ds.minEvictableIdleTimeMillis=300000
#ds.numTestsPerEvictionRun=10
#ds.validationQuery=SELECT 1 from dual
#ds.testWhileIdle=true

#spring配置
#<!-- dbcp2数据库连接池 -->
#<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">  
#   <property name="driverClassName" value="${ds.driverClassName}"/>  
#   <property name="url" value="${ds.url}"/>  
#   <property name="username" value="${ds.username}"/>  
#   <property name="password" value="${ds.password}"/>  
#   <!--maxTotal: 最大连接数量-->  
#   <property name="maxTotal" value="${ds.maxTotal}"/>  
#   <!--minIdle: 最小空闲连接-->  
#   <property name="minIdle" value="${ds.minIdle}"/>  
#   <!--maxIdle: 最大空闲连接-->  
#   <property name="maxIdle" value="${ds.maxIdle}"/>  
#   <!--initialSize: 初始化连接-->  
#   <property name="initialSize" value="${ds.initialSize}"/>  
#   <!--   maxWaitMillis: 超时等待时间以毫秒为单位 1000等于60秒 -->  
#   <property name="maxWaitMillis" value="${ds.maxWaitMillis}"/>  
#   <!--  连接被泄露时是否打印 -->  
#   <property name="logAbandoned" value="${ds.logAbandoned}"/>  
#   <!--   removeAbandoned: 是否自动回收超时连接 -->  
#   <property name="removeAbandonedOnBorrow" value="${ds.removeAbandonedOnBorrow}"/>  
#   <property name="removeAbandonedOnMaintenance" value="${ds.removeAbandonedOnMaintenance}"/>  
#   <!--  removeAbandonedTimeout: 超时时间(以秒数为单位) -->  
#   <property name="removeAbandonedTimeout" value="${ds.removeAbandonedTimeout}"/> 
#   <!--   在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
#   <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}"/>  
#  	<!--   在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
#   <property name="numTestsPerEvictionRun" value="${ds.numTestsPerEvictionRun}"/>  
#	<!--    1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程 -->  
#   <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}"/>  
#   <property name="validationQuery" value="${ds.validationQuery}"/>  
#	<!-- 定时对线程池中的链接进行validateObject校验，对无效的链接进行关闭 -->  
# 	<property name="testWhileIdle" value="${ds.testWhileIdle}"/>  
#</bean> 
#initialSize ：连接池启动时创建的初始化连接数量（默认值为0）
#maxTotal ：连接池中可同时连接的最大的连接数（默认值为8，调整为20，高峰单机器在20并发左右，自己根据应用场景定）
#maxIdle：连接池中最大的空闲的连接数，超过的空闲连接将被释放，如果设置为负数表示不限制（默认为8个，maxIdle不能设置太小，因为假如在高负载的情况下，连接的打开时间比关闭的时间快，会引起连接池中idle的个数 上升超过maxIdle，而造成频繁的连接销毁和创建，类似于jvm参数中的Xmx设置)
#minIdle：连接池中最小的空闲的连接数，低于这个数量会被创建新的连接（默认为0，调整为5，该参数越接近maxIdle，性能越好，因为连接的创建和销毁，都是需要消耗资源的；但是不能太大，因为在机器很空闲的时候，也会创建低于minidle个数的连接，类似于jvm参数中的Xmn设置）
#maxWaitMillis  ：最大等待时间，当没有可用连接时，连接池等待连接释放的最大时间，超过该时间限制会抛出异常，如果设置-1表示无限等待（默认为无限，调整为60000ms，避免因线程池不够用，而导致请求被无限制挂起）
#poolPreparedStatements：开启池的prepared（默认是false，未调整，经过测试，开启后的性能没有关闭的好。）
#maxOpenPreparedStatements：开启池的prepared 后的同时最大连接数（默认无限制，同上，未配置）
#minEvictableIdleTimeMillis  ：连接池中连接，在时间段内一直空闲， 被逐出连接池的时间
#（默认为30分钟，可以适当做调整，需要和后端服务端的策略配置相关）
#removeAbandonedTimeout  ：超过时间限制，回收没有用(废弃)的连接（默认为 300秒，调整为180）
#removeAbandonedOnBorrow  ：超过removeAbandonedTimeout时间后，是否进 行没用连接（废弃）的回收（默认为false，调整为true)
#removeAbandonedOnMaintenance  ：超过removeAbandonedTimeout时间后，是否进 行没用连接（废弃）的回收（默认为false，调整为true)



#####################c3p0数据源配置属性(v0.9.5.2,2015.12.8)#####################
#####################mysql#####################
#ds.driverClass=com.mysql.jdbc.Driver
#ds.jdbcUrl=jdbc:mysql://localhost:3306/ssm?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
#ds.user=root
#ds.password=root
#ds.initialPoolSize=5
#ds.minPoolSize=5
#ds.maxPoolSize=50
#ds.maxIdleTime=1800
#ds.acquireIncrement=10
#ds.idleConnectionTestPeriod=60
#####################oracle#####################
#ds.driverClass=oracle.jdbc.driver.OracleDriver
#ds.jdbcUrl=jdbc:oracle:thin:@localhost:1521:orcl
#ds.initialPoolSize=5
#ds.minPoolSize=5
#ds.maxPoolSize=50
#ds.maxIdleTime=1800
#ds.acquireIncrement=10
#ds.idleConnectionTestPeriod=60

#spring配置
#<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
#    <!-- 基本信息 -->
#    <property name="jdbcUrl" value="${ds.jdbcUrl}"></property>
#    <property name="driverClass" value="${ds.driverClass}"></property>
#    <property name="user" value="${ds.user}"></property>
#    <property name="password" value="${ds.password}"></property>
#    <!-- 其他配置 -->
#    <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
#    <property name="initialPoolSize" value="${ds.initialPoolSize}"></property>
#    <!--连接池中保留的最小连接数。Default: 3 -->
#    <property name="minPoolSize" value="${ds.minPoolSize}"></property>
#    <!--连接池中保留的最大连接数。Default: 15 -->
#    <property name="maxPoolSize" value="${ds.maxPoolSize}"></property>
#    <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
#    <property name="acquireIncrement" value="${ds.acquireIncrement}"></property>
#    <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
#    <property name="maxIdleTime" value="${ds.maxIdleTime}"></property>
#</bean>



#####################proxool(0.9.1,2008.8.23)数据源配置属性#####################
#####################mysql#####################
#ds.driver=com.mysql.jdbc.Driver
#ds.driverUrl=jdbc:mysql://localhost:3306/ssm?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
#ds.user=root
#ds.password=root
#ds.alias=ssm
#ds.maximumActiveTime=300000
#ds.maximumConnectionLifetime=18000000
#ds.houseKeepingSleepTime=900000
#ds.prototypeCount=0
#ds.maximumConnectionCount=50
#ds.minimumConnectionCount=10
#ds.simultaneousBuildThrottle=50
#ds.houseKeepingTestSql=select 1 from dual
#####################oracle#####################
#ds.driver=oracle.jdbc.driver.OracleDriver
#ds.driverUrl=jdbc:oracle:thin:@localhost:1521:orcl
#ds.user=orcl
#ds.password=orcl
#ds.alias=orcl
#ds.houseKeepingSleepTime=900000
#ds.maximumActiveTime=300000
#ds.prototypeCount=0
#ds.maximumConnectionLifetime=18000000
#ds.maximumConnectionCount=50
#ds.minimumConnectionCount=10
#ds.simultaneousBuildThrottle=50
#ds.houseKeepingTestSql=select 1 from dual

#spring配置
#<!-- proxool数据库连接池 -->
#<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
#    <property name="driver" value="${ds.driver}"/>
#    <property name="driverUrl" value="${ds.driverUrl}"/>
#    <property name="user" value="${ds.user}" />
#    <property name="password" value="${ds.password}" />
#    <property name="alias" value="${ds.alias}" />
#    <property name="houseKeepingSleepTime" value="${ds.houseKeepingSleepTime}" />
#    <property name="prototypeCount" value="${ds.prototypeCount}" />
#    <property name="maximumConnectionCount" value="${ds.maximumConnectionCount}" />
#    <property name="minimumConnectionCount" value="${ds.minimumConnectionCount}" />
#    <property name="simultaneousBuildThrottle" value="${ds.simultaneousBuildThrottle}" />
#    <property name="maximumConnectionLifetime" value="${ds.maximumConnectionLifetime}" />
#    <property name="houseKeepingTestSql" value="${ds.houseKeepingTestSql}" />
#</bean>
#alias数据源名称
#house-keeping-sleep-time: house keeper 保留线程处于睡眠状态的最长时间,house keeper 的职责就是检查各个连接的状态,并判断是否需要销毁或者创建.
#house-keeping-test-sql:  如果发现了空闲的数据库连接.house keeper 将会用这个语句来测试.这个语句最好非常快的被执行.如果没有定义,测试过程将会被忽略。
#maximum-active-time: 如果housekeeper 检测到某个线程的活动时间大于这个数值.它将会杀掉这个线程.所以确认一下你的服务器的带宽.然后定一个合适的值.默认是5分钟.
#maximum-connection-count: 最大的数据库连接数.
#maximum-connection-lifetime: 一个线程的最大寿命.
#minimum-connection-count: 最小的数据库连接数
#overload-without-refusal-lifetime: 略
#prototype-count: 连接池中可用的连接数量.如果当前的连接池中的连接少于这个数值.新的连接将被建立(假设没有超过最大可用数).例如.我们有3个活动连接2个可用连接,而我们的prototype-count是4,那么数据库连接池将试图建立另外2个连接.这和 minimum-connection-count不同. minimum-connection-count把活动的连接也计算在内.prototype-count 是spare connections 的数量.